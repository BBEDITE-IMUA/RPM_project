"""Init migration

Revision ID: 28807eb9a402
Revises: 
Create Date: 2024-12-26 14:32:51.611265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28807eb9a402'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('iso_code', sa.String(), nullable=False),
    sa.CheckConstraint('length(iso_code) = 2', name=op.f('ck_countries_ck_countries_iso_code_length')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_countries')),
    schema='public'
    )
    op.create_table('languages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('locale', sa.String(), nullable=False),
    sa.CheckConstraint('length(locale) > 0', name=op.f('ck_languages_ck_languages_locale_length')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_languages')),
    schema='public'
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.TIMESTAMP(), nullable=False),
    sa.CheckConstraint('user_id > 0', name=op.f('ck_users_ck_users_user_id_positive')),
    sa.ForeignKeyConstraint(['language_id'], ['public.languages.id'], name=op.f('fk_users_language_id_languages')),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_users')),
    sa.UniqueConstraint('user_id', name='uq_users_user_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_users_user_id'), 'users', ['user_id'], unique=False, schema='public')
    op.create_table('keys',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_key', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('created_at < expires_at', name=op.f('ck_keys_ck_keys_dates')),
    sa.ForeignKeyConstraint(['country_id'], ['public.countries.id'], name=op.f('fk_keys_country_id_countries')),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.user_id'], name=op.f('fk_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_keys')),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('keys', schema='public')
    op.drop_index(op.f('ix_public_users_user_id'), table_name='users', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('languages', schema='public')
    op.drop_table('countries', schema='public')
    # ### end Alembic commands ###
